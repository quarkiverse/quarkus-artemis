name: Build

on:
  push:
    branches:
      - "main"
    paths-ignore:
      - '.gitignore'
      - 'CODEOWNERS'
      - 'LICENSE'
      - '*.md'
      - '*.adoc'
      - '*.txt'
      - '.all-contributorsrc'
  pull_request:
    paths-ignore:
      - '.gitignore'
      - 'CODEOWNERS'
      - 'LICENSE'
      - '*.md'
      - '*.adoc'
      - '*.txt'
      - '.all-contributorsrc'

jobs:
  populate-cache:
    runs-on: ubuntu-latest

    outputs:
      cache-hit: ${{ steps.populate.outputs.cache-hit }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'temurin'
          cache: 'maven'
        id: setup

      - name: Populate Maven Cache and run verify
        id: populate
        run: |
          if [[ ${{ steps.setup.outputs.cache-hit }} != 'true' ]]
          then
            mvn -B dependency:go-offline verify -Dno-verify
            echo "cache-hit=false" >> $GITHUB_OUTPUT
          else
            echo "cache-hit=true" >> $GITHUB_OUTPUT
          fi

  build:
    needs: populate-cache
    runs-on: ubuntu-latest
    strategy:
      matrix:
        integration-test-module:
          - integration-tests/core/empty-config
          - integration-tests/core/with-default
          - integration-tests/core/with-default-and-external
          - integration-tests/core/with-default-change-url
          - integration-tests/core/with-external
          - integration-tests/core/without-default
          - integration-tests/jms/empty-config
          - integration-tests/jms/with-default
          - integration-tests/jms/with-default-and-external
          - integration-tests/jms/with-default-change-url
          - integration-tests/jms/with-external
          - integration-tests/jms/without-default

    steps:
      - if: ${{ needs.populate-cache.outputs.cache-hit == 'true' }}
        uses: actions/checkout@v3

      - if: ${{ needs.populate-cache.outputs.cache-hit == 'true' }}
        name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'temurin'
          cache: 'maven'

      - if: ${{ needs.populate-cache.outputs.cache-hit == 'true' }}
        name: Build with Maven (${{ matrix.integration-test-module }})
        run: |
          mvn -B clean verify \
            -pl core/deployment,jms/deployment,${{ matrix.integration-test-module }} \
            -am \
            -Dno-format

  test-native:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        integration-test-module:
          - integration-tests/core/empty-config
          - integration-tests/core/with-default
          - integration-tests/core/with-default-and-external
          - integration-tests/core/with-default-change-url
          - integration-tests/core/with-external
          - integration-tests/core/without-default
          - integration-tests/jms/empty-config
          - integration-tests/jms/with-default
          - integration-tests/jms/with-default-and-external
          - integration-tests/jms/with-default-change-url
          - integration-tests/jms/with-external
          - integration-tests/jms/without-default

    steps:
      - uses: actions/checkout@v3

      - name: Get Maven Cache
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'temurin'
          cache: 'maven'

      - name: Set up GraalVM 17
        uses: graalvm/setup-graalvm@v1
        with:
          version: 'latest'
          java-version: 17
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build with Maven (Native, ${{matrix.integration-test-module}})
        run: |
          mvn -B verify \
            -pl core/deployment,jms/deployment,${{ matrix.integration-test-module }} \
            -am \
            -Dnative \
            -Dnative.surefire.skip