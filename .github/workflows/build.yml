name: Build

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
      - "3.2.x"
    paths-ignore:
      - '.gitignore'
      - 'CODEOWNERS'
      - 'LICENSE'
      - '*.md'
      - '*.adoc'
      - '*.txt'
      - '.all-contributorsrc'
  pull_request:
    paths-ignore:
      - '.gitignore'
      - 'CODEOWNERS'
      - 'LICENSE'
      - '*.md'
      - '*.adoc'
      - '*.txt'
      - '.all-contributorsrc'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  upload-pr-number:
    runs-on: ubuntu-latest

    steps:
      - name: Get
        id: get-pr-number
        if: ${{ always() && github.event_name == 'pull_request' }}
        run: |
          echo "${{ github.event.number }}" > "pr-number.txt"

      - name: Upload
        uses: actions/upload-artifact@v4
        if: ${{ always() && github.event_name == 'pull_request' }}
        with:
          name: pr-number
          path: pr-number.txt

  generate-matrix:
    runs-on: ubuntu-latest

    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}

    steps:
      - name: Git checkout
        uses: actions/checkout@v4

      - name: Generate Matrix
        id: generate-matrix
        run: |
          root=$(pwd)/integration-tests
          pom_file=pom.xml
          exclude_dir_pattern=common
          exclude_package_type=pom

          mapfile -t candidates < <(
          find "${root}" -type f -name "${pom_file}" \
            | sed "s|/${pom_file}$||" \
            | sort \
            | uniq)

          results=()
          for candidate in "${candidates[@]}"
          do
            if [[ "${candidate}" = "${root}" || "${candidate}" =~ ${exclude_dir_pattern} ]]
            then
              continue
            fi

            pom_packaging=0
            grep --quiet \
              "<packaging>${exclude_package_type}</packaging>" \
              "${candidate}/${pom_file}" \
                || pom_packaging="${?}"
            if [[ "${pom_packaging}" -ne 0 ]]
            then
              results+=("${candidate}")
            fi
          done
          matrix=$( \
            echo "${results[@]}" \
              | tr " " "\n" \
              | sed "s|$(pwd)/||" \
              | jq \
                --raw-input \
                --null-input \
                --compact-output \
                "[ [inputs][] | { \"integration-test-module\": . } ] | { \"include\": . }")
          echo "matrix=${matrix}" >> "${GITHUB_OUTPUT}"

      - name: Cancel Build
        if: ${{ failure() }}
        uses: andymckay/cancel-action@0.3

  populate-cache:
    runs-on: ubuntu-latest

    steps:
      - name: Git checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: 'maven'
        id: setup

      - name: Populate Maven Cache
        id: populate
        if: ${{ steps.setup.outputs.cache-hit != 'true' }}
        run: |
          ./mvnw \
            --batch-mode \
            --define maven.buildNumber.skip \
            quarkus:go-offline \
            de.qaware.maven:go-offline-maven-plugin:resolve-dependencies

      - name: Cancel Build
        if: ${{ failure() }}
        uses: andymckay/cancel-action@0.3

  build-and-test-jvm:
    runs-on: ubuntu-latest

    continue-on-error: true

    needs:
      - generate-matrix
      - populate-cache

    strategy:
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}

    steps:
      - name: Git checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: 'maven'

      - name: Build and Test
        id: build-and-test-jvm
        run: |
          artifact_path=${{ matrix.integration-test-module }}
          ./mvnw \
            --batch-mode \
            --also-make \
            --define no-format \
            --define maven.buildNumber.skip \
            --projects \
              "core/deployment, \
              jms/deployment, \
              ra/deployment, \
              ${artifact_path}" \
            verify
          echo "artifact_suffix=${artifact_path//\//_}" >> "${GITHUB_OUTPUT}"

      - name: Upload JVM Test Report
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: test-report-jvm-${{ steps.build-and-test-jvm.outputs.artifact_suffix }}
          path: '**/target/*-reports/TEST*.xml'
          if-no-files-found: error
          retention-days: 2

  build-and-test-native:
    runs-on: ubuntu-latest

    needs:
      - populate-cache
      - generate-matrix

    continue-on-error: true

    strategy:
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}

    steps:
      - name: Git checkout
        uses: actions/checkout@v4

      - name: Get Maven Cache
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: 'maven'

      - name: Set up GraalVM 21
        uses: graalvm/setup-graalvm@v1
        with:
          distribution: 'mandrel'
          version: 'latest'
          java-version: 21
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Test
        id: build-and-test-native
        run: |
          artifact_path=${{ matrix.integration-test-module }}
          ./mvnw \
            --batch-mode  \
            --also-make \
            --define maven.buildNumber.skip \
            --define native \
            --define native.surefire.skip \
            --projects \
              "core/deployment, \
              jms/deployment, \
              ra/deployment, \
              ${artifact_path}" \
            verify
          echo "artifact_suffix=${artifact_path//\//_}" >> "${GITHUB_OUTPUT}"

      - name: Upload Native Test Report
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: test-report-native-${{ steps.build-and-test-native.outputs.artifact_suffix }}
          path: '**/target/*-reports/TEST*.xml'
          if-no-files-found: error
          retention-days: 2
